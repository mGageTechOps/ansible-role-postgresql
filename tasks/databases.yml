---
# Manage a local databases and users
# This only works where the local system `postgres` user has admin rights

- name: postgres | install ansible prerequisites
  become: yes
  yum:
    name: "{{ item }}"
    state: present
  with_items:
  - python-psycopg2

- name: postgres | see if host is a slave
  stat: path={{ postgresql_datadir }}/recovery.conf
  register: is_slave

- name: postgres | create database
  become: yes
  become_user: postgres
  postgresql_db:
    encoding: UTF-8
    name: "{{ item.1 }}"
    state: present
  with_subelements:
    - "{{ postgresql_users_databases }}"
    - databases
  when: not is_slave.stat.exists

- name: postgres | create user
  become: yes
  become_user: postgres
  postgresql_user:
    login_user: 'postgres'
    db: "{{ item.1 }}"
    encrypted: yes
    name: "{{ item.0.user }}"
    password: "{{ item.0.password }}"
    role_attr_flags: "{{ item.0.roles | default(omit) }}"
    priv: "{{ item.0.privs | default(omit) }}"
    state: "{{ item.0.state | default('present') }}"
  with_subelements:
    - "{{ postgresql_users_databases }}"
    - databases
  when: not is_slave.stat.exists

- name: postgres | enable extensions
  become: yes
  become_user: postgres
  postgresql_ext: name={{ item.name }} db={{ item.db }} state={{ item.state|default('present') }}
  with_items: "{{ postgresql_extensions }}"
  when: not is_slave.stat.exists
